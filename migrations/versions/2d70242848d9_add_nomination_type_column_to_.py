"""Add nomination_type column to nominations

Revision ID: 2d70242848d9
Revises: 3b0fa418ab04
Create Date: 2025-08-18 07:07:09.359526

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2d70242848d9'
down_revision: Union[str, Sequence[str], None] = '3b0fa418ab04'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
    'nominations',
    sa.Column(
        'nomination_type',
        sa.Enum('monthly', 'quarterly', 'yearly', name='nominationtype'),
        nullable=False,
        server_default='monthly'  # <-- default value for existing rows
    )
    )
    op.alter_column('password_resets', 'expires_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('password_resets', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.create_foreign_key(None, 'password_resets', 'users', ['user_id'], ['id'])
    op.add_column('sentiment_results', sa.Column('id', sa.Integer(), autoincrement=True, nullable=False))
    op.alter_column('sentiment_results', 'nomination_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('sentiment_results', 'employee_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=20),
               existing_nullable=True)
    op.alter_column('sentiment_results', 'analyzed_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.create_foreign_key(None, 'sentiment_results', 'employees', ['employee_id'], ['id'])
    op.create_foreign_key(None, 'sentiment_results', 'nominations', ['nomination_id'], ['id'])
    op.create_foreign_key(None, 'sentiment_results', 'users', ['manager_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'sentiment_results', type_='foreignkey')
    op.drop_constraint(None, 'sentiment_results', type_='foreignkey')
    op.drop_constraint(None, 'sentiment_results', type_='foreignkey')
    op.alter_column('sentiment_results', 'analyzed_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('sentiment_results', 'employee_id',
               existing_type=sa.String(length=20),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('sentiment_results', 'nomination_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('sentiment_results', 'id')
    op.drop_constraint(None, 'password_resets', type_='foreignkey')
    op.alter_column('password_resets', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('password_resets', 'expires_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('nominations', 'nomination_type')
    # ### end Alembic commands ###
